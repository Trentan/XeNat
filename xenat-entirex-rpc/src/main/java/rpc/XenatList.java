/**
 ** Please don't modify this file.
 ** This file was generated by the EntireX Java Wrapper
 ** from the IDL file PRUU.idl.
 **
 ** @author    Software AG
 ** @version   EntireX Wrapper, Version: 10.5.0.0.639, Date: 06 Sep 2019 (1.173)
 ** Generated: 2020-06-03 21:20:20.222 +1000
 **/

package rpc;

import com.softwareag.entirex.aci.Broker;
import com.softwareag.entirex.aci.BrokerException;
import com.softwareag.entirex.aci.BrokerService;
import com.softwareag.entirex.aci.RPCService;

import java.lang.reflect.Method;
import java.util.Date;

public class XenatList extends RPCService {

	public static final String DEFAULT_BROKERID = "localhost:1971";
	public static final String DEFAULT_SERVER = "RPC/NATSRV2800/CALLNAT";

	private Wswhis02_msg[] wswhis02_msg = new Wswhis02_msg[0];

	private Wswhis02_searchresult_arr[] wswhis02_searchresult_arr = new Wswhis02_searchresult_arr[0];

	private final static String WSWHIS02_FORMAT = // from IDL
			("OA(V)0,0SG(U)1,1,0SA1,0SA(V)0,0SA(V)0,0SA(V)0,0SG1,0OG1,"
					+ "1OA8,0OA8,0OT0,0OT0,0OA(U)8,0,0OA(U)8,0,0OG1,0SG(U)1,1,0SA8,"
					+ "0SA10,0SA1,0ST0,0SA8,0SA8,0SI4,0SA1,0SA1,0ST0,0SA8,0SA8," + "0SI4,0SA8,0SG1,0.");

	public XenatList() {
		super();
	}

	public XenatList(Broker broker) {
		this(broker, DEFAULT_SERVER);
	}

	public XenatList(BrokerService bs) {
		this(bs.getBroker(), bs.toString());
	}

	public XenatList(Broker broker, String serverAddr) {
		super(broker, serverAddr, "PRUU", true);
	}

	public static String getStubVersion() {
		return "EntireX RPC for Java Stub Version=10.5.0.0, Patch Level=639";
	}

	public Wswhis02_msg[] getWswhis02_msg() {
		return this.wswhis02_msg;
	}

	public Wswhis02_searchresult_arr[] getWswhis02_searchresult_arr() {
		return this.wswhis02_searchresult_arr;
	}

	public void wswhis02(String _ptid, Wswhis02_criteria _criteria) throws BrokerException {

		enterStub();
		buildHeader(WSWHIS02_FORMAT, "31", 0, 0, "WSWHIS02", true, 2000, true, true, 2050);

		if (_ptid == null) {
			super.marshal.addDataAV(null);
		} else {
			super.marshal.addDataAV(_ptid);
		}

		if (_criteria == null) {
			new Wswhis02_criteria().add();
		} else {
			_criteria.add();
		}

		callServer();

		int wswhis02_msgIndex0 = super.marshal.getArrayIndex();
		wswhis02_msg = new Wswhis02_msg[wswhis02_msgIndex0];
		for (int i0 = 0; i0 < wswhis02_msgIndex0; i0++) {
			wswhis02_msg[i0] = new Wswhis02_msg();
			wswhis02_msg[i0].get();
		}
		int wswhis02_searchresult_arrIndex0 = super.marshal.getArrayIndex();
		wswhis02_searchresult_arr = new Wswhis02_searchresult_arr[wswhis02_searchresult_arrIndex0];
		for (int i0 = 0; i0 < wswhis02_searchresult_arrIndex0; i0++) {
			wswhis02_searchresult_arr[i0] = new Wswhis02_searchresult_arr();
			wswhis02_searchresult_arr[i0].get();
		}
		leaveStub();

	}

	public class Wswhis02_msg {
		public String _msg_typ;
		public String _msg_txt;
		public String _msg_fld;
		public String _msg_cod;

		public void set_msg_typ(String _msg_typ) {
			this._msg_typ = _msg_typ;
		}

		public String get_msg_typ() {
			return this._msg_typ;
		}

		public void set_msg_txt(String _msg_txt) {
			this._msg_txt = _msg_txt;
		}

		public String get_msg_txt() {
			return this._msg_txt;
		}

		public void set_msg_fld(String _msg_fld) {
			this._msg_fld = _msg_fld;
		}

		public String get_msg_fld() {
			return this._msg_fld;
		}

		public void set_msg_cod(String _msg_cod) {
			this._msg_cod = _msg_cod;
		}

		public String get_msg_cod() {
			return this._msg_cod;
		}

		public void get() throws BrokerException {
			_msg_typ = XenatList.super.marshal.getDataA(1);
			_msg_txt = XenatList.super.marshal.getDataAV();
			_msg_fld = XenatList.super.marshal.getDataAV();
			_msg_cod = XenatList.super.marshal.getDataAV();
		}
	}

	public class Wswhis02_criteria {
		public String _module_from;
		public String _module_to;
		public Date _src_from_ts;
		public Date _src_to_ts;
		public String[] _lib;
		public String[] _user_id;

		public void set_module_from(String _module_from) {
			this._module_from = _module_from;
		}

		public String get_module_from() {
			return this._module_from;
		}

		public void set_module_to(String _module_to) {
			this._module_to = _module_to;
		}

		public String get_module_to() {
			return this._module_to;
		}

		public void set_src_from_ts(Date _src_from_ts) {
			this._src_from_ts = _src_from_ts;
		}

		public Date get_src_from_ts() {
			return this._src_from_ts;
		}

		public void set_src_to_ts(Date _src_to_ts) {
			this._src_to_ts = _src_to_ts;
		}

		public Date get_src_to_ts() {
			return this._src_to_ts;
		}

		public void set_lib(String[] _lib) {
			this._lib = _lib;
		}

		public String[] get_lib() {
			return this._lib;
		}

		public void set_user_id(String[] _user_id) {
			this._user_id = _user_id;
		}

		public String[] get_user_id() {
			return this._user_id;
		}

		public void add() throws BrokerException {

			if (_module_from == null) {
				XenatList.super.marshal.addDataA(null, 8);
			} else {
				XenatList.super.marshal.addDataA(_module_from, 8);
			}

			if (_module_to == null) {
				XenatList.super.marshal.addDataA(null, 8);
			} else {
				XenatList.super.marshal.addDataA(_module_to, 8);
			}

			if (_src_from_ts == null) {
				XenatList.super.marshal.addDataD((Date) null, 15);
			} else {
				XenatList.super.marshal.addDataD(_src_from_ts, 15);
			}

			if (_src_to_ts == null) {
				XenatList.super.marshal.addDataD((Date) null, 15);
			} else {
				XenatList.super.marshal.addDataD(_src_to_ts, 15);
			}
			if (_lib == null) {
				_lib = new String[0];
			}
			XenatList.super.marshal.addArrayIndex(_lib.length);
			for (int i0 = 0; i0 < _lib.length; i0++) {

				if (_lib == null) {
					XenatList.super.marshal.addDataA(null, 8);
				} else {
					XenatList.super.marshal.addDataA(_lib[i0], 8);
				}
			}
			if (_user_id == null) {
				_user_id = new String[0];
			}
			XenatList.super.marshal.addArrayIndex(_user_id.length);
			for (int i0 = 0; i0 < _user_id.length; i0++) {

				if (_user_id == null) {
					XenatList.super.marshal.addDataA(null, 8);
				} else {
					XenatList.super.marshal.addDataA(_user_id[i0], 8);
				}
			}
		}

	}

	public class Wswhis02_searchresult_arr {
		public String lib;
		public String list_obj;
		public String list_type_src;
		public Date out_src_date_time;
		public String out_src_user;
		public String out_src_version;
		public int out_src_size;
		public String out_src_prog_mode;
		public String list_type_mod;
		public Date out_cat_date_time;
		public String out_cat_user;
		public String out_cat_version;
		public int out_cat_bp_size;
		public String out_cat_gda_name;

		public void setLib(String lib) {
			this.lib = lib;
		}

		public String getLib() {
			return this.lib;
		}

		public void setList_obj(String list_obj) {
			this.list_obj = list_obj;
		}

		public String getList_obj() {
			return this.list_obj;
		}

		public void setList_type_src(String list_type_src) {
			this.list_type_src = list_type_src;
		}

		public String getList_type_src() {
			return this.list_type_src;
		}

		public void setOut_src_date_time(Date out_src_date_time) {
			this.out_src_date_time = out_src_date_time;
		}

		public Date getOut_src_date_time() {
			return this.out_src_date_time;
		}

		public void setOut_src_user(String out_src_user) {
			this.out_src_user = out_src_user;
		}

		public String getOut_src_user() {
			return this.out_src_user;
		}

		public void setOut_src_version(String out_src_version) {
			this.out_src_version = out_src_version;
		}

		public String getOut_src_version() {
			return this.out_src_version;
		}

		public void setOut_src_size(int out_src_size) {
			this.out_src_size = out_src_size;
		}

		public int getOut_src_size() {
			return this.out_src_size;
		}

		public void setOut_src_prog_mode(String out_src_prog_mode) {
			this.out_src_prog_mode = out_src_prog_mode;
		}

		public String getOut_src_prog_mode() {
			return this.out_src_prog_mode;
		}

		public void setList_type_mod(String list_type_mod) {
			this.list_type_mod = list_type_mod;
		}

		public String getList_type_mod() {
			return this.list_type_mod;
		}

		public void setOut_cat_date_time(Date out_cat_date_time) {
			this.out_cat_date_time = out_cat_date_time;
		}

		public Date getOut_cat_date_time() {
			return this.out_cat_date_time;
		}

		public void setOut_cat_user(String out_cat_user) {
			this.out_cat_user = out_cat_user;
		}

		public String getOut_cat_user() {
			return this.out_cat_user;
		}

		public void setOut_cat_version(String out_cat_version) {
			this.out_cat_version = out_cat_version;
		}

		public String getOut_cat_version() {
			return this.out_cat_version;
		}

		public void setOut_cat_bp_size(int out_cat_bp_size) {
			this.out_cat_bp_size = out_cat_bp_size;
		}

		public int getOut_cat_bp_size() {
			return this.out_cat_bp_size;
		}

		public void setOut_cat_gda_name(String out_cat_gda_name) {
			this.out_cat_gda_name = out_cat_gda_name;
		}

		public String getOut_cat_gda_name() {
			return this.out_cat_gda_name;
		}

		public void get() throws BrokerException {
			lib = XenatList.super.marshal.getDataA(8);
			list_obj = XenatList.super.marshal.getDataA(10);
			list_type_src = XenatList.super.marshal.getDataA(1);
			out_src_date_time = XenatList.super.marshal.getDataD(15);
			out_src_user = XenatList.super.marshal.getDataA(8);
			out_src_version = XenatList.super.marshal.getDataA(8);
			out_src_size = XenatList.super.marshal.getDataI4();
			out_src_prog_mode = XenatList.super.marshal.getDataA(1);
			list_type_mod = XenatList.super.marshal.getDataA(1);
			out_cat_date_time = XenatList.super.marshal.getDataD(15);
			out_cat_user = XenatList.super.marshal.getDataA(8);
			out_cat_version = XenatList.super.marshal.getDataA(8);
			out_cat_bp_size = XenatList.super.marshal.getDataI4();
			out_cat_gda_name = XenatList.super.marshal.getDataA(8);
		}
	}

	public static final Method enterStubMethod = getStubMethod("enterClientStub");
	public static final Method leaveStubMethod = getStubMethod("leaveClientStub");

	private static Method getStubMethod(String name) {
		Method method = null;
		try {
			method = RPCService.class.getMethod(name, (Class<?>[]) null);
		} catch (final Exception ex) {
		}
		return method;
	}

	private void enterStub() {
		if (enterStubMethod != null) {
			try {
				enterStubMethod.invoke(this, (Object[]) null);
			} catch (final Exception ex) {
			}
		}
	}

	private void leaveStub() {
		if (leaveStubMethod != null) {
			try {
				leaveStubMethod.invoke(this, (Object[]) null);
			} catch (final Exception ex) {
			}
		}
	}
}
